<?php

/**
 * @file
 * Update Hooks.
 */

use Drupal\field\Entity\FieldStorageConfig;

/**
 * Updates Media file size field storage for larger files.
 */
function islandora_core_feature_update_8001() {

  $entity_type = 'media';
  $field_name = 'field_file_size';

  $database = \Drupal::database();
  $tables = [
    "{$entity_type}__{$field_name}",
    "{$entity_type}_revision__{$field_name}",
  ];

  foreach ($tables as $table) {

    // Move the existing data out of the way.
    $database->schema()->renameTable($table, $table . '_o');

    // Create replacement tables.
    $database->schema()->createTable($table, [
      'fields' => [
        'bundle' => [
          'type' => 'varchar',
          'not null' => TRUE,
          'length' => 128,
          'default' => ' ',
        ],
        'deleted' => [
          'type' => 'int',
          'size' => 'tiny',
          'not null' => TRUE,
          'default' => 0,
        ],
        'entity_id' => [
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'length' => 10,

        ],
        'revision_id' => [
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'length' => 10,
        ],
        'langcode' => [
          'type' => 'varchar',
          'not null' => TRUE,
          'length' => 32,
          'default' => ' ',
        ],
        'delta' => [
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'length' => 10,
        ],
        'field_file_size_value' => [
          'type' => 'int',
          'size' => 'big',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ],
      ],
      'primary key' => ['entity_id', 'deleted', 'delta', 'langcode'],
      'indexes' => ['bundle' => ['bundle'], 'revision_id' => ['revision_id']],
    ]);
  }

  // Update field storage configuration.
  $config = \Drupal::configFactory()
    ->getEditable("field.storage.{$entity_type}.{$field_name}");
  $config->set('settings.size', 'big');
  $config->set('settings.unsigned', TRUE);
  $config->save(TRUE);

  // Make sure the new config persists.
  FieldStorageConfig::loadByName($entity_type, $field_name)->save();

  // Reload the data and clean up.
  foreach ($tables as $table) {
    $query = $database->select($table . '_o', 'o')->fields('o');
    $database->insert($table)->from($query)->execute();
    $database->schema()->dropTable($table . '_o');
  }

  return t('Length of @entity-type.@field-name updated to an unsigned big int', [
    '@entity-type' => $entity_type,
    '@field-name' => $field_name,
  ]);
}
